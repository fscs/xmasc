eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"xmasc-frontend/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var ApplicationAdapter;\n\n    ApplicationAdapter = DS.ActiveModelAdapter.extend({\n      host: \"/api\"\n    });\n\n    __exports__[\"default\"] = ApplicationAdapter;\n  });//# sourceURL=xmasc-frontend/adapters/application.js");

;eval("define(\"xmasc-frontend/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"xmasc-frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=xmasc-frontend/app.js");

;eval("define(\"xmasc-frontend/controllers/imps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var CALENDARS, ImpsController, alias, compare, compareImpDesc, computed, filterBy, get, restFor, setProperties, sort;\n\n    CALENDARS = [\"Lego Star Wars\", \"Lego City\"];\n\n    get = Ember.get;\n\n    setProperties = Ember.setProperties;\n\n    computed = Ember.computed;\n\n    filterBy = computed.filterBy;\n\n    sort = computed.sort;\n\n    alias = computed.alias;\n\n    compare = Ember.compare;\n\n    restFor = function(impsKey) {\n      var lengthKey;\n      lengthKey = \"\" + impsKey + \".length\";\n      return computed(lengthKey, function() {\n        return 24 - this.get(lengthKey);\n      });\n    };\n\n    compareImpDesc = function(imp1, imp2) {\n      return compare(+get(imp2, \"id\"), +get(imp1, \"id\"));\n    };\n\n    ImpsController = Ember.ArrayController.extend({\n      actions: {\n        \"add-imp\": function() {\n          return this.createImp(this.get(\"impName\"), this.get(\"impMail\"), this.get(\"impCalendar\"));\n        }\n      },\n      impName: null,\n      impMail: null,\n      impCalendar: null,\n      nameError: alias(\"errors.name.firstObject\"),\n      emailError: alias(\"errors.email.firstObject\"),\n      calendarError: alias(\"errors.calendar.firstObject\"),\n      calendars: CALENDARS,\n      createImp: function(name, mail, calendar) {\n        var imp;\n        imp = this.store.createRecord(\"imp\", {\n          name: name,\n          email: mail,\n          calendar: calendar\n        });\n        return imp.save().then(((function(_this) {\n          return function() {\n            return _this.reset();\n          };\n        })(this)), (function(_this) {\n          return function(response) {\n            _this.store.unloadRecord(imp);\n            return _this.set(\"errors\", response.errors);\n          };\n        })(this));\n      },\n      reset: function() {\n        setProperties(this, {\n          impName: null,\n          impMail: null,\n          impCalendar: null\n        });\n        return this.set(\"errors\", {});\n      },\n      filteredImps: filterBy(\"content\", \"isDirty\", false),\n      imps: sort(\"filteredImps\", compareImpDesc),\n      starWarsImps: filterBy(\"filteredImps\", \"calendar\", CALENDARS[0]),\n      restStarWars: restFor(\"starWarsImps\"),\n      cityImps: filterBy(\"filteredImps\", \"calendar\", CALENDARS[1]),\n      restCity: restFor(\"cityImps\")\n    });\n\n    __exports__[\"default\"] = ImpsController;\n  });//# sourceURL=xmasc-frontend/controllers/imps.js");

;eval("define(\"xmasc-frontend/initializers/export-application-global\", \n  [\"ember\",\"xmasc-frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=xmasc-frontend/initializers/export-application-global.js");

;eval("define(\"xmasc-frontend/models/imp\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var Imp, attr;\n\n    attr = DS.attr;\n\n    Imp = DS.Model.extend({\n      name: attr(\"string\"),\n      email: attr(\"string\"),\n      calendar: attr(\"string\")\n    });\n\n    __exports__[\"default\"] = Imp;\n  });//# sourceURL=xmasc-frontend/models/imp.js");

;eval("define(\"xmasc-frontend/router\", \n  [\"ember\",\"xmasc-frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      return this.resource(\"imps\", {\n        path: \"/\"\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=xmasc-frontend/router.js");

;eval("define(\"xmasc-frontend/routes/imps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ImpsRoute;\n\n    ImpsRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\"imp\");\n      }\n    });\n\n    __exports__[\"default\"] = ImpsRoute;\n  });//# sourceURL=xmasc-frontend/routes/imps.js");

;eval("define(\"xmasc-frontend/templates/imp\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <small>\");\n      stack1 = helpers._triageMustache.call(depth0, \"calendar\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=xmasc-frontend/templates/imp.js");

;eval("define(\"xmasc-frontend/templates/imps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <small class=\\\"error\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"calendarError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small>\\n        \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <small class=\\\"error\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"nameError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small>\\n        \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <small class=\\\"error\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"emailError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small>\\n        \");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"imp\", options) : helperMissing.call(depth0, \"partial\", \"imp\", options))));\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <li class=\\\"empty\\\"><em>Noch keine Teilnehmer vorhanden. Sei der Erste!</em></li>\\n      \");\n      }\n\n      data.buffer.push(\"<header id=\\\"xmascHeader\\\"></header>\\n<div class=\\\"magellan-wrapper\\\">\\n  <form id=\\\"impForm\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"view.magellan\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n    <div class=\\\"row collapse prefix-round postfix-round\\\">\\n      <div class=\\\"small-3 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n        \'name\': (\"calendar\"),\n        \'prompt\': (\"Kalender\"),\n        \'value\': (\"impCalendar\"),\n        \'content\': (\"calendars\"),\n        \'classNameBindings\': (\":prefix calendarError:error\")\n      },hashTypes:{\'name\': \"STRING\",\'prompt\': \"STRING\",\'value\': \"ID\",\'content\': \"ID\",\'classNameBindings\': \"STRING\"},hashContexts:{\'name\': depth0,\'prompt\': depth0,\'value\': depth0,\'content\': depth0,\'classNameBindings\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"calendarError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </div>\\n      <div class=\\\"small-3 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'name\': (\"name\"),\n        \'value\': (\"impName\"),\n        \'placeholder\': (\"Name\"),\n        \'class\': (\"nameError:error\")\n      },hashTypes:{\'name\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"ID\"},hashContexts:{\'name\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"nameError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </div>\\n      <div class=\\\"small-3 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'name\': (\"email\"),\n        \'value\': (\"impMail\"),\n        \'placeholder\': (\"E-Mail\"),\n        \'class\': (\"emailError:error\")\n      },hashTypes:{\'name\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"ID\"},hashContexts:{\'name\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"emailError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </div>\\n      <div class=\\\"small-2 columns\\\">\\n        <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"add-imp\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"button postfix\\\">Pekmez</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"small-15 columns text-center\\\">\\n    Türchen vergeben: <em>\");\n      stack1 = helpers._triageMustache.call(depth0, \"imps.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</em><br>\\n    Lego Star Wars: <em>\");\n      stack1 = helpers._triageMustache.call(depth0, \"restStarWars\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Türchen übrig</em> &middot; Lego City: <em>\");\n      stack1 = helpers._triageMustache.call(depth0, \"restCity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Türchen übrig</em>\\n  </div>\\n</div>\\n\\n<section class=\\\"row\\\">\\n  <div class=\\\"small-11 columns\\\">\\n    <ul class=\\\"imps\\\">\\n      \");\n      stack1 = helpers.each.call(depth0, \"imps\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n  </div>\\n</section>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=xmasc-frontend/templates/imps.js");

;eval("define(\"xmasc-frontend/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=xmasc-frontend/tests/app.jshint.js");

;eval("define(\"xmasc-frontend/tests/helpers/resolver\", \n  [\"ember/resolver\",\"xmasc-frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=xmasc-frontend/tests/helpers/resolver.js");

;eval("define(\"xmasc-frontend/tests/helpers/start-app\", \n  [\"ember\",\"xmasc-frontend/app\",\"xmasc-frontend/router\",\"xmasc-frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=xmasc-frontend/tests/helpers/start-app.js");

;eval("define(\"xmasc-frontend/tests/test-helper\", \n  [\"xmasc-frontend/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=xmasc-frontend/tests/test-helper.js");

;eval("define(\"xmasc-frontend/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {});\n\n    test(\'it exists\', function() {\n      var adapter;\n      adapter = this.subject();\n      return ok(adapter);\n    });\n  });//# sourceURL=xmasc-frontend/tests/unit/adapters/application-test.js");

;eval("define(\"xmasc-frontend/tests/unit/controllers/imps-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:imps\', \'ImpsController\', {});\n\n    test(\'it exists\', function() {\n      var controller;\n      controller = this.subject();\n      return ok(controller);\n    });\n  });//# sourceURL=xmasc-frontend/tests/unit/controllers/imps-test.js");

;eval("define(\"xmasc-frontend/tests/unit/models/imp-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n    moduleForModel(\'imp\', \'Imp\', {\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model;\n      model = this.subject();\n      return ok(!!model);\n    });\n  });//# sourceURL=xmasc-frontend/tests/unit/models/imp-test.js");

;eval("define(\"xmasc-frontend/tests/unit/routes/imps-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:imps\', \'ImpsRoute\', {});\n\n    test(\'it exists\', function() {\n      var route;\n      route = this.subject();\n      return ok(route);\n    });\n  });//# sourceURL=xmasc-frontend/tests/unit/routes/imps-test.js");

;eval("define(\"xmasc-frontend/tests/unit/views/imps-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:imps\', \'ImpsView\');\n\n    test(\'it exists\', function() {\n      var view;\n      view = this.subject();\n      return ok(view);\n    });\n  });//# sourceURL=xmasc-frontend/tests/unit/views/imps-test.js");

;eval("define(\"xmasc-frontend/tests/xmasc-frontend/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - xmasc-frontend/tests/helpers\');\n    test(\'xmasc-frontend/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'xmasc-frontend/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=xmasc-frontend/tests/xmasc-frontend/tests/helpers/resolver.jshint.js");

;eval("define(\"xmasc-frontend/tests/xmasc-frontend/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - xmasc-frontend/tests/helpers\');\n    test(\'xmasc-frontend/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'xmasc-frontend/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=xmasc-frontend/tests/xmasc-frontend/tests/helpers/start-app.jshint.js");

;eval("define(\"xmasc-frontend/tests/xmasc-frontend/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - xmasc-frontend/tests\');\n    test(\'xmasc-frontend/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'xmasc-frontend/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=xmasc-frontend/tests/xmasc-frontend/tests/test-helper.jshint.js");

;eval("define(\"xmasc-frontend/views/imps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ImpsView;\n\n    ImpsView = Ember.View.extend({\n      listenForScroll: (function() {\n        return Ember.$(document).on(\"scroll\", (function(_this) {\n          return function() {\n            return _this.set(\"scrollTop\", Ember.$(document).scrollTop());\n          };\n        })(this));\n      }).on(\"didInsertElement\"),\n      magellan: (function() {\n        return this.get(\"scrollTop\") > 403;\n      }).property(\"scrollTop\")\n    });\n\n    __exports__[\"default\"] = ImpsView;\n  });//# sourceURL=xmasc-frontend/views/imps.js");

/* jshint ignore:start */

define('xmasc-frontend/config/environment', ['ember'], function(Ember) {
  var prefix = 'xmasc-frontend';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('xmasc-frontend/tests/test-helper');
} else {
  require('xmasc-frontend/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
