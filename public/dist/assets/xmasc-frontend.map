{"version":3,"sources":["vendor/ember-cli/app-prefix.js","xmasc-frontend/adapters/application.js","xmasc-frontend/app.js","xmasc-frontend/components/app-version.js","xmasc-frontend/controllers/array.js","xmasc-frontend/controllers/imps.js","xmasc-frontend/controllers/index.js","xmasc-frontend/controllers/object.js","xmasc-frontend/initializers/app-version.js","xmasc-frontend/initializers/export-application-global.js","xmasc-frontend/models/imp.js","xmasc-frontend/router.js","xmasc-frontend/routes/application.js","xmasc-frontend/routes/imps.js","xmasc-frontend/templates/application.js","xmasc-frontend/templates/countdown.js","xmasc-frontend/templates/imp.js","xmasc-frontend/templates/imps.js","xmasc-frontend/templates/index.js","xmasc-frontend/views/imps.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define(\"xmasc-frontend/adapters/application\", [\"exports\", \"ember-data\"], function (exports, _emberData) {\n  var ApplicationAdapter;\n\n  ApplicationAdapter = _emberData[\"default\"].ActiveModelAdapter.extend({\n    host: \"/api\"\n  });\n\n  exports[\"default\"] = ApplicationAdapter;\n});","define('xmasc-frontend/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'xmasc-frontend/config/environment'], function (exports, _ember, _emberResolver, _emberLoadInitializers, _xmascFrontendConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _xmascFrontendConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _xmascFrontendConfigEnvironment['default'].podModulePrefix,\n    Resolver: _emberResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _xmascFrontendConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('xmasc-frontend/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'xmasc-frontend/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _xmascFrontendConfigEnvironment) {\n\n  var name = _xmascFrontendConfigEnvironment['default'].APP.name;\n  var version = _xmascFrontendConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('xmasc-frontend/controllers/array', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define(\"xmasc-frontend/controllers/imps\", [\"exports\", \"ember\"], function (exports, _ember) {\n  var CALENDARS, ImpsController, alias, compare, compareImpDesc, computed, filterBy, filterImp, get, isEmpty, reads, restFor, setProperties, sort;\n\n  CALENDARS = [\"Lego Star Wars\", \"Lego City\"];\n\n  get = _ember[\"default\"].get;\n\n  setProperties = _ember[\"default\"].setProperties;\n\n  computed = _ember[\"default\"].computed;\n\n  filterBy = computed.filterBy;\n\n  sort = computed.sort;\n\n  alias = computed.alias;\n\n  reads = computed.reads;\n\n  compare = _ember[\"default\"].compare;\n\n  isEmpty = _ember[\"default\"].isEmpty;\n\n  restFor = function (impsKey) {\n    var lengthKey;\n    lengthKey = impsKey + \".length\";\n    return computed(lengthKey, function () {\n      return 24 - this.get(lengthKey);\n    });\n  };\n\n  compareImpDesc = function (imp1, imp2) {\n    return compare(+get(imp2, \"id\"), +get(imp1, \"id\"));\n  };\n\n  filterImp = function (imp, filter) {\n    return get(imp, \"name\").match(new RegExp(filter, \"i\"));\n  };\n\n  ImpsController = _ember[\"default\"].ArrayController.extend({\n    needs: [\"index\", \"application\"],\n    actions: {\n      \"add-imp\": function addImp() {\n        return this.createImp(this.get(\"impName\"), this.get(\"impMail\"), this.get(\"impCalendar\"));\n      }\n    },\n    displayTime: reads(\"controllers.index.displayTime\"),\n    authenticated: reads(\"controllers.application.authenticated\"),\n    impName: null,\n    impMail: null,\n    impCalendar: null,\n    nameError: alias(\"errors.name.firstObject\"),\n    emailError: alias(\"errors.email.firstObject\"),\n    calendarError: alias(\"errors.calendar.firstObject\"),\n    calendars: CALENDARS,\n    createImp: function createImp(name, mail, calendar) {\n      var imp;\n      imp = this.store.createRecord(\"imp\", {\n        name: name,\n        email: mail,\n        calendar: calendar\n      });\n      return imp.save().then((function (_this) {\n        return function () {\n          return _this.reset();\n        };\n      })(this), (function (_this) {\n        return function (response) {\n          _this.store.unloadRecord(imp);\n          return _this.set(\"errors\", response.errors);\n        };\n      })(this));\n    },\n    reset: function reset() {\n      setProperties(this, {\n        impName: null,\n        impMail: null,\n        impCalendar: null\n      });\n      return this.set(\"errors\", {});\n    },\n    filteredImps: filterBy(\"content\", \"isDirty\", false),\n    sortedImps: sort(\"filteredImps\", compareImpDesc),\n    imps: (function () {\n      var impFilter, imps;\n      impFilter = this.get(\"impFilter\");\n      imps = this.get(\"sortedImps\");\n      if (impFilter == null) {\n        return imps;\n      } else {\n        return imps.filter(function (imp) {\n          return isEmpty(impFilter) || filterImp(imp, impFilter);\n        });\n      }\n    }).property(\"impFilter\", \"sortedImps\"),\n    starWarsImps: filterBy(\"filteredImps\", \"calendar\", CALENDARS[0]),\n    restStarWars: restFor(\"starWarsImps\"),\n    cityImps: filterBy(\"filteredImps\", \"calendar\", CALENDARS[1]),\n    restCity: restFor(\"cityImps\")\n  });\n\n  exports[\"default\"] = ImpsController;\n});","define(\"xmasc-frontend/controllers/index\", [\"exports\", \"ember\"], function (exports, _ember) {\n  var IndexController, dayMilis, floor, getRestTime, getTimeFrom, hourMilis, minuteMilis, secondMilis;\n\n  getRestTime = function () {\n    return new Date(2014, 11, 1) - new Date();\n  };\n\n  floor = Math.floor;\n\n  dayMilis = 864e5;\n\n  hourMilis = 36e5;\n\n  minuteMilis = 6e4;\n\n  secondMilis = 1e3;\n\n  getTimeFrom = function (time) {\n    var days, hours, minutes, seconds;\n    days = floor(time / dayMilis);\n    hours = floor(time % dayMilis / hourMilis);\n    minutes = floor(time % hourMilis / minuteMilis);\n    seconds = floor(time % minuteMilis / secondMilis);\n    return \"Noch \" + days + \" Tage \" + hours + \" Stunden \" + minutes + \" Minuten \" + seconds + \" Sekunden\";\n  };\n\n  IndexController = _ember[\"default\"].ObjectController.extend({\n    time: getRestTime(),\n    displayTime: (function () {\n      var time;\n      time = this.get(\"time\");\n      if (time > 0) {\n        return getTimeFrom(time);\n      } else {\n        return \"Frohe Weihnachten! · Merry Christmas! <br> Chanukah Sameach! · Heri Za Kwanzaa!\";\n      }\n    }).property(\"time\"),\n    startTimer: (function () {\n      return setInterval((function (_this) {\n        return function () {\n          return _this.set(\"time\", getRestTime());\n        };\n      })(this), 1000);\n    }).on(\"init\")\n  });\n\n  exports[\"default\"] = IndexController;\n});","define('xmasc-frontend/controllers/object', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('xmasc-frontend/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'xmasc-frontend/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _xmascFrontendConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_xmascFrontendConfigEnvironment['default'].APP.name, _xmascFrontendConfigEnvironment['default'].APP.version)\n  };\n});","define('xmasc-frontend/initializers/export-application-global', ['exports', 'ember', 'xmasc-frontend/config/environment'], function (exports, _ember, _xmascFrontendConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_xmascFrontendConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var value = _xmascFrontendConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_xmascFrontendConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define(\"xmasc-frontend/models/imp\", [\"exports\", \"ember-data\"], function (exports, _emberData) {\n  var Imp, attr;\n\n  attr = _emberData[\"default\"].attr;\n\n  Imp = _emberData[\"default\"].Model.extend({\n    name: attr(\"string\"),\n    email: attr(\"string\"),\n    calendar: attr(\"string\"),\n    tuerchen: attr(\"number\")\n  });\n\n  exports[\"default\"] = Imp;\n});","define('xmasc-frontend/router', ['exports', 'ember', 'xmasc-frontend/config/environment'], function (exports, _ember, _xmascFrontendConfigEnvironment) {\n  var Router;\n\n  Router = _ember['default'].Router.extend({\n    location: _xmascFrontendConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {\n    return this.resource(\"imps\");\n  });\n\n  exports['default'] = Router;\n});","define(\"xmasc-frontend/routes/application\", [\"exports\", \"ember\"], function (exports, _ember) {\n  var ApplicationRoute;\n\n  ApplicationRoute = _ember[\"default\"].Route.extend({\n    actions: {\n      authenticate: function authenticate() {\n        var failure, success;\n        success = (function (_this) {\n          return function () {\n            return _this.controller.set(\"authenticated\", true);\n          };\n        })(this);\n        failure = (function (_this) {\n          return function () {\n            return _this.controller.set(\"authenticated\", false);\n          };\n        })(this);\n        return Em.$.getJSON(\"/authenticate\").then(success, failure);\n      }\n    }\n  });\n\n  exports[\"default\"] = ApplicationRoute;\n});","define(\"xmasc-frontend/routes/imps\", [\"exports\", \"ember\"], function (exports, _ember) {\n  var ImpsRoute;\n\n  ImpsRoute = _ember[\"default\"].Route.extend({\n    model: function model() {\n      return this.store.find(\"imp\");\n    }\n  });\n\n  exports[\"default\"] = ImpsRoute;\n});","define(\"xmasc-frontend/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.10\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 14,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"xmasc-frontend/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"a\");\n        dom.setAttribute(el1, \"id\", \"authLink\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"wrapper row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"small-11 columns\");\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"header\");\n        dom.setAttribute(el3, \"id\", \"xmascHeader\");\n        dom.setAttribute(el3, \"class\", \"row\");\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.setAttribute(el4, \"src\", \"img/header.jpg\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"wrapper row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"small-11 columns text-center\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createElementMorph(element0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [4, 1]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"element\", \"action\", [\"authenticate\"], [], [\"loc\", [null, [1, 3], [1, 28]]]], [\"content\", \"outlet\", [\"loc\", [null, [11, 4], [11, 14]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"xmasc-frontend/templates/countdown\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.10\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"xmasc-frontend/templates/countdown.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"id\", \"countdowntimer\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createUnsafeMorphAt(dom.childAt(fragment, [0]), 0, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"displayTime\", [\"loc\", [null, [1, 25], [1, 42]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"xmasc-frontend/templates/imp\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 5,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 10,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imp.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1, \"class\", \"tuerchen\");\n          var el2 = dom.createTextNode(\"\\n        Türchen\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 0, 0);\n          return morphs;\n        },\n        statements: [[\"content\", \"tuerchen\", [\"loc\", [null, [8, 13], [8, 25]]]]],\n        locals: [],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.10\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 13,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"xmasc-frontend/templates/imp.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"li\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"small\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [3]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(element0, 1, 1);\n        morphs[1] = dom.createMorphAt(element1, 1, 1);\n        morphs[2] = dom.createMorphAt(element1, 3, 3);\n        return morphs;\n      },\n      statements: [[\"content\", \"name\", [\"loc\", [null, [2, 2], [2, 10]]]], [\"content\", \"calendar\", [\"loc\", [null, [4, 4], [4, 16]]]], [\"block\", \"if\", [[\"get\", \"tuerchen\", [\"loc\", [null, [5, 10], [5, 18]]]]], [], 0, null, [\"loc\", [null, [5, 4], [10, 11]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define(\"xmasc-frontend/templates/imps\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [[\"inline\", \"partial\", [\"countdown\"], [], [\"loc\", [null, [4, 6], [4, 29]]]]],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child1 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.10\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 9,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 11,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"small\");\n            dom.setAttribute(el1, \"class\", \"error\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n            return morphs;\n          },\n          statements: [[\"content\", \"calendarError\", [\"loc\", [null, [10, 35], [10, 52]]]]],\n          locals: [],\n          templates: []\n        };\n      })();\n      var child1 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.10\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 15,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 17,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"small\");\n            dom.setAttribute(el1, \"class\", \"error\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n            return morphs;\n          },\n          statements: [[\"content\", \"nameError\", [\"loc\", [null, [16, 35], [16, 48]]]]],\n          locals: [],\n          templates: []\n        };\n      })();\n      var child2 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.10\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 21,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 23,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"small\");\n            dom.setAttribute(el1, \"class\", \"error\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n            return morphs;\n          },\n          statements: [[\"content\", \"emailError\", [\"loc\", [null, [22, 35], [22, 49]]]]],\n          locals: [],\n          templates: []\n        };\n      })();\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 5,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1, \"class\", \"row collapse prefix-round postfix-round\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"small-3 columns\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"small-3 columns\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"small-3 columns\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"small-2 columns\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3, \"class\", \"button postfix\");\n          var el4 = dom.createTextNode(\"Pekmez\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var element3 = dom.childAt(element1, [3]);\n          var element4 = dom.childAt(element1, [5]);\n          var element5 = dom.childAt(element1, [7, 1]);\n          var morphs = new Array(7);\n          morphs[0] = dom.createMorphAt(element2, 1, 1);\n          morphs[1] = dom.createMorphAt(element2, 3, 3);\n          morphs[2] = dom.createMorphAt(element3, 1, 1);\n          morphs[3] = dom.createMorphAt(element3, 3, 3);\n          morphs[4] = dom.createMorphAt(element4, 1, 1);\n          morphs[5] = dom.createMorphAt(element4, 3, 3);\n          morphs[6] = dom.createElementMorph(element5);\n          return morphs;\n        },\n        statements: [[\"inline\", \"view\", [\"select\"], [\"name\", \"calendar\", \"prompt\", \"Kalender\", \"value\", [\"subexpr\", \"@mut\", [[\"get\", \"impCalendar\", [\"loc\", [null, [8, 68], [8, 79]]]]], [], []], \"content\", [\"subexpr\", \"@mut\", [[\"get\", \"calendars\", [\"loc\", [null, [8, 88], [8, 97]]]]], [], []], \"class\", [\"subexpr\", \"concat\", [\"prefix\", \" \", [\"subexpr\", \"if\", [[\"get\", \"calendarError\", []], \"error\"], [], []], \" \"], [], []]], [\"loc\", [null, [8, 12], [8, 147]]]], [\"block\", \"if\", [[\"get\", \"calendarError\", [\"loc\", [null, [9, 18], [9, 31]]]]], [], 0, null, [\"loc\", [null, [9, 12], [11, 19]]]], [\"inline\", \"input\", [], [\"name\", \"name\", \"value\", [\"subexpr\", \"@mut\", [[\"get\", \"impName\", [\"loc\", [null, [14, 38], [14, 45]]]]], [], []], \"placeholder\", \"Name\", \"class\", [\"subexpr\", \"@mut\", [[\"get\", \"nameError:error\", [\"loc\", [null, [14, 71], [14, 86]]]]], [], []]], [\"loc\", [null, [14, 12], [14, 88]]]], [\"block\", \"if\", [[\"get\", \"nameError\", [\"loc\", [null, [15, 18], [15, 27]]]]], [], 1, null, [\"loc\", [null, [15, 12], [17, 19]]]], [\"inline\", \"input\", [], [\"name\", \"email\", \"value\", [\"subexpr\", \"@mut\", [[\"get\", \"impMail\", [\"loc\", [null, [20, 39], [20, 46]]]]], [], []], \"placeholder\", \"E-Mail\", \"class\", [\"subexpr\", \"@mut\", [[\"get\", \"emailError:error\", [\"loc\", [null, [20, 74], [20, 90]]]]], [], []]], [\"loc\", [null, [20, 12], [20, 92]]]], [\"block\", \"if\", [[\"get\", \"emailError\", [\"loc\", [null, [21, 18], [21, 28]]]]], [], 2, null, [\"loc\", [null, [21, 12], [23, 19]]]], [\"element\", \"action\", [\"add-imp\"], [], [\"loc\", [null, [26, 20], [26, 40]]]]],\n        locals: [],\n        templates: [child0, child1, child2]\n      };\n    })();\n    var child2 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 33,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 40,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1, \"class\", \"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"small-11 columns text-center\");\n          var el3 = dom.createTextNode(\"\\n      Türchen vergeben: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"/48\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"br\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      Lego Star Wars: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" Türchen übrig\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" · Lego City: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"em\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" Türchen übrig\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);\n          morphs[1] = dom.createMorphAt(dom.childAt(element0, [4]), 0, 0);\n          morphs[2] = dom.createMorphAt(dom.childAt(element0, [6]), 0, 0);\n          return morphs;\n        },\n        statements: [[\"content\", \"imps.length\", [\"loc\", [null, [36, 28], [36, 43]]]], [\"content\", \"restStarWars\", [\"loc\", [null, [37, 26], [37, 42]]]], [\"content\", \"restCity\", [\"loc\", [null, [37, 86], [37, 98]]]]],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child3 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 46,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 48,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [[\"inline\", \"partial\", [\"imp\"], [], [\"loc\", [null, [47, 8], [47, 25]]]]],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child4 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.10\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 49,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 51,\n                \"column\": 8\n              }\n            },\n            \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.setAttribute(el1, \"class\", \"empty\");\n            var el2 = dom.createElement(\"em\");\n            var el3 = dom.createTextNode(\"Noch keine Teilnehmer vorhanden. Sei der Erste!\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.10\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 52,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [[\"block\", \"if\", [[\"get\", \"authenticated\", [\"loc\", [null, [49, 14], [49, 27]]]]], [], 0, null, [\"loc\", [null, [49, 8], [51, 15]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.10\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 56,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"xmasc-frontend/templates/imps.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"magellan-wrapper\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"form\");\n        dom.setAttribute(el2, \"id\", \"impForm\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1, \"class\", \"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"small-11 columns\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3, \"class\", \"imps\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element6 = dom.childAt(fragment, [0, 1]);\n        var element7 = dom.childAt(fragment, [4, 1]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createAttrMorph(element6, 'class');\n        morphs[1] = dom.createMorphAt(element6, 1, 1);\n        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        morphs[3] = dom.createMorphAt(element7, 1, 1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element7, [3]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"attribute\", \"class\", [\"concat\", [[\"subexpr\", \"-bind-attr-class\", [[\"get\", \"view.magellan\", []], \"magellan\"], [], []]]]], [\"block\", \"unless\", [[\"get\", \"authenticated\", [\"loc\", [null, [3, 14], [3, 27]]]]], [], 0, 1, [\"loc\", [null, [3, 4], [29, 15]]]], [\"block\", \"if\", [[\"get\", \"authenticated\", [\"loc\", [null, [33, 6], [33, 19]]]]], [], 2, null, [\"loc\", [null, [33, 0], [40, 7]]]], [\"inline\", \"input\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"impFilter\", [\"loc\", [null, [44, 18], [44, 27]]]]], [], []], \"placeholder\", \"Suche Wichtel\"], [\"loc\", [null, [44, 4], [44, 57]]]], [\"block\", \"each\", [[\"get\", \"imps\", [\"loc\", [null, [46, 14], [46, 18]]]]], [], 3, 4, [\"loc\", [null, [46, 6], [52, 15]]]]],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4]\n    };\n  })());\n});","define(\"xmasc-frontend/templates/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.10\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"xmasc-frontend/templates/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"text-center\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"inline\", \"partial\", [\"countdown\"], [], [\"loc\", [null, [1, 0], [1, 23]]]], [\"inline\", \"link-to\", [\"Hier gehts zur Wichtelliste\", \"imps\"], [], [\"loc\", [null, [3, 2], [3, 50]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"xmasc-frontend/views/imps\", [\"exports\", \"ember\"], function (exports, _ember) {\n  var $, ImpsView;\n\n  $ = _ember[\"default\"].$;\n\n  ImpsView = _ember[\"default\"].View.extend({\n    listenForScroll: (function () {\n      var scroll;\n      scroll = (function (_this) {\n        return function () {\n          return _this.set(\"scrollTop\", _ember[\"default\"].$(document).scrollTop());\n        };\n      })(this);\n      return $(document).on(\"scroll\", scroll);\n    }).on(\"didInsertElement\"),\n    magellan: (function () {\n      return this.get(\"scrollTop\") > 352;\n    }).property(\"scrollTop\")\n  });\n\n  exports[\"default\"] = ImpsView;\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('xmasc-frontend/config/environment', ['ember'], function(Ember) {\n  var prefix = 'xmasc-frontend';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (!runningTests) {\n  require(\"xmasc-frontend/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"xmasc-frontend\",\"version\":\"0.0.0+62e5cf5a\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"xmasc-frontend.js"}